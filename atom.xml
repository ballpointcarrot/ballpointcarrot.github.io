<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[blog.ballpointcarrot.net]]></title>
  <link href="http://ballpointcarrot.github.io/atom.xml" rel="self"/>
  <link href="http://ballpointcarrot.github.io/"/>
  <updated>2014-02-08T10:40:52-08:00</updated>
  <id>http://ballpointcarrot.github.io/</id>
  <author>
    <name><![CDATA[Christopher Kruse]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Learning a new Editor]]></title>
    <link href="http://ballpointcarrot.github.io/blog/2014/02/07/learning-a-new-editor/"/>
    <updated>2014-02-07T22:03:00-08:00</updated>
    <id>http://ballpointcarrot.github.io/blog/2014/02/07/learning-a-new-editor</id>
    <content type="html"><![CDATA[<h2>Background</h2>

<p>I often fall back to my (now well-worn) copy of <a href="http://pragprog.com/book/tpp/the-pragmatic-programmer">The Pragmatic Programmer</a> to take a look at things I can do to hone my abilities as a programmer. Recently, the two rules that have most recently hit me as things I haven&rsquo;t put much focus on are <em>Invest Regularly in Your Knowledge Portfolio</em>, and <em>There Are No Final Decisions</em>. In a fit of Christmas downime enegry, I decided to incorporate these principles by taking myself out of my normal comfort zone, and cutting out one of my most widely used tools &ndash; vim.</p>

<p>I&rsquo;ve been a vimmer for many years, and I&rsquo;ve incorporated utilities passed down from greater minds than I (Tim Pope, the guys at Pivotal, etc.) and had become comfortable in how I used my text editor day-to-day. I had a nice workflow set up, utilizing multiple vim tabs and separate sessions within tmux windows, and life was pretty good.</p>

<p>Then, in December, the challenge was set: strip vim out of my workflow for good, and find something else.</p>

<p>Naturally, and guided by one of my coworkers, I managed to settle on what is generally considered to be the prime competitor to vim &ndash; Emacs.</p>

<h2>Baby Steps</h2>

<p>I&rsquo;ve had forays into learning Emacs before, but I&rsquo;ve always shied away, after playing with some basic tooling, and forgetting how to close it more often than I care to admit. This time was different, though; I had more years of experience under my belt, and it was more about getting myself into an uncomfortable place before I gain more knowledge.</p>

<p>My first thought was to find some type of starting guide. While the Emacs tutorial helped in terms of understanding navigation and simple editing, it didn&rsquo;t really show me the true power of the environment that I had gained. A cursory google search brought me to the <a href="https://github.com/technomancy/emacs-starter-kit">Emacs Starter Kit</a>. This toolkit provides some default setting to get you started with the environment; I used the documentation around it to gain knowledge of things like Melpa and Marmalade, which act as Emacs Package Managers of sorts.</p>

<p>Following my initial setup with the starter kit, I started delving into the <a href="http://www.emacswiki.org/emacs/">emacs wiki</a>. This became a much more handy resource to me, as it provided me with multiple provided solutions to given issues that I&rsquo;ve encountered while converting my vim-based mind to a constantly-insert-enabled editor. When I&rsquo;d run into an issue where I found something I&rsquo;d like to do similar to vim, I&rsquo;d head to the wiki to find what analogs are available. Once I&rsquo;d find a package which did what I looked for, I&rsquo;d test it out with an M-x pacakge-install, and incorporate it into my init.el when I felt I had it down.</p>

<h4>Evil?</h4>

<p>I had been asked while converting why I decided not to use a vi-like editor package for Emacs (like Evil or Viper). I felt that, if I were to do this, it would be skimping out on what I should be learning, and I&rsquo;d get less of an understanding of Emacs because I was sticking to my old method of doing things. Thus, I opted for Emacs&rsquo;s standard of editing, and no vi-emulation modes.</p>

<h2>Post-move</h2>

<p>These are the things that I&rsquo;ve discovered in the two months since I switched:</p>

<ul>
<li>Split pane support. I actually like the way that Emacs splits its windows better than vim. A C-x 2 or C-x 3 is an easy way to remember it; coupled with the &lsquo;workgroups2&rsquo; package, configurations can be stored across sessions, too.</li>
<li>Lisp. This has been a slow one for me, but I&rsquo;m becoming more interested in learning Lisp and Lisp-like languages, like Clojure. I have a lot of work to do here, and that will be something to work on in the future.</li>
<li>Tramp. Being able to edit files across an SSH tunnel is a fantastic feature.</li>
<li>Buffers without files. Since the editor is meant to live on indefinitely, it&rsquo;s nice to spin up a new buffer and set the mode(s) I want, and let it reside in memory for a while before saving it. If I need to, a save is close enough away, but it works wonders for when I need to take some quick notes.</li>
<li>ERC. I no longer need a separate IRC cilent; Emacs handles it for me. This is fantastic for me at work, where we frequently use chat to talk around.</li>
</ul>


<p>Things I wish I had from Vim:</p>

<ul>
<li>Sentence-like movement. I&rsquo;ve sort of rebuilt this on my own with a combination of line-jumps (M-x goto-line) and ace-jump-mode, but being able to translate &ldquo;^3wci(&rdquo; into what it can do in Vim is a skill I have yet to master.</li>
<li>Mixing modes in HTML. This was noticeably less of a problem in Vim, but I don&rsquo;t know if it was due to the editor or my lack of noticing that showed just how difficult it is to switch contexts from HTML/CSS/JS all in the same file. I&rsquo;ve tried doing the nXML hack and multiple modes, but those have worked to no avail.</li>
<li>Closing the editor. True, I can leave Emacs. But, I miss popping up a new window for one file, and then leaving right after a quick edit.</li>
<li>Workspace management. Because of the way I separated files into tabs in Vim, I knew each tab matched a different section of what I was working on (or another project entirely).  I lack this with the way that buffers are managed by default in Emacs. I&rsquo;m still looking for better ways of handling this management, though &ndash; workgroups2 has been a nice start.</li>
</ul>


<p>Things I know I still have yet to learn:</p>

<ul>
<li>More Lisp. I&rsquo;ve gotten a good start, but that&rsquo;s a deep rabbit hole.</li>
<li>Shell, email within Emacs. I used to use a lot of separate tools &ndash; now that Emacs contains most of them, I&rsquo;d like to get better at handling those tasks within Emacs.</li>
<li>Org-mode. I&rsquo;ve seen my coworker pull off some crazy things with scheduling and notes within Org-mode, and I&rsquo;d love to get to the point where I can do them, too.</li>
<li>Macros and scripting. My next Pragmatic tenet is <em>Write Code That Writes Code</em>; I think getting your editor set to facilitate your programming counts. :)</li>
</ul>


<p>We&rsquo;ll see what the next few months hold.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Well, I should've been paying attention.]]></title>
    <link href="http://ballpointcarrot.github.io/blog/2013/08/19/well/"/>
    <updated>2013-08-19T11:42:00-07:00</updated>
    <id>http://ballpointcarrot.github.io/blog/2013/08/19/well</id>
    <content type="html"><![CDATA[<p>So, I guess on 30 April 2013, Posterous Spaces was shuttered. You should see <a href="http://www.posterous.com">what&rsquo;s there now</a>.</p>

<p>Then, a full three months later, someone tells me that ballpointcarrot.net isn&rsquo;t functioning.
I figure, &ldquo;I can check it when I find some time. It&rsquo;s been busy.&rdquo;</p>

<p>Cue almost a <em>month</em> after that, and I find that Posterous is gone (as is the content on the old blog).
Now, I&rsquo;m working to rebuild and reset different platforms/ideas that can both provide me CNAME linking
to <a href="http://blog.ballpointcarrot.net">blog.ballpointcarrot.net</a>, and I ran across Github Pages and Octopress.
I&rsquo;m gonna give it a try for a while, and see what happens.</p>

<p>Meanwhile, the main ballpointcarrot site has to go through a redesign, as the automatic feed parsing thing has
broken enough times that it&rsquo;s time to replace it. Expect a new look (but the same old logo) sometime when I find
some more time again &ndash; so November, maybe. :S</p>
]]></content>
  </entry>
  
</feed>
